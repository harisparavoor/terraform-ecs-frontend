version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Installing dependencies...
      - npm install -g webpack webpack-cli
      - npm install

  pre_build:
    commands:
      - sed -i "s|{{REACT_APP_BACKEND_URL}}|$REACT_APP_BACKEND_URL|g" webpack.config.js
      - echo $REACT_APP_BACKEND_URL
      - echo Replacing placeholders in appspec.yml
      - sed -i "s|{{frontend_blue_target_group_name}}|$frontend_blue_target_group_name|g" appspec.yml
      - sed -i "s|{{frontend_green_target_group_name}}|$frontend_green_target_group_name|g" appspec.yml
      - sed -i "s|{{task_definition}}|$task_definition|g" appspec.yml
      - sed -i "s|{{alb_listener_arn}}|$alb_listener_arn|g" appspec.yml
      - echo "Here is the final appspec.yml after replacement:"
      - cat appspec.yml
      - cat webpack.config.js
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - REPOSITORY_URI=$REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"frontend","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json

artifacts:
  files:
    - appspec.yml
    - imagedefinitions.json
